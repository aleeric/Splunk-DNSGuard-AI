<?xml version="1.0"?>
<dashboard stylesheet="dashboard.css" script="dashboard.js">
  <label>DNS Anomaly Analysis</label>
  <description>Detailed analysis of DNS anomalies detected by DNSGuard AI models</description>
  <row>
    <panel>
      <title>Live DNS Anomaly Detection</title>
      <single>
        <search>
          <query>`dns_c2_tunneling_detection` OR `dns_beaconing_detection(0.01)` OR `dns_burst_activity_detection(0.001)` OR 
          `dns_txt_record_detection(0.001)` OR `dns_any_record_detection(0.001)` OR `dns_hinfo_record_detection(0.001)` OR 
          `dns_axfr_record_detection(0.001)` OR `dns_query_length_detection(0.001)` OR `dns_domain_shadowing_detection(0.001)` 
          | stats count</query>
          <earliest>-5m@m</earliest>
          <latest>now</latest>
        </search>
        <option name="drilldown">none</option>
        <option name="colorBy">value</option>
        <option name="colorMode">block</option>
        <option name="rangeColors">["0x53a051","0xf8be34","0xf1813f","0xdc4e41"]</option>
        <option name="rangeValues">[0,1,3,5]</option>
        <option name="useColors">1</option>
        <option name="unitPosition">after</option>
        <option name="unit">new anomalies</option>
      </single>
    </panel>
    <panel>
      <title>Anomalies by Type (Last 7 Days)</title>
      <chart>
        <search>
          <query>| inputlookup anomalous_src_lookup | search last_update > relative_time(now(), "-7d")
          | eval c2_tunneling=if(c2_tunneling=1,1,0), beaconing=if(beaconing=1,1,0), burst_activity=if(burst_activity=1,1,0),
                 txt_record_type=if(txt_record_type=1,1,0), any_record_type=if(any_record_type=1,1,0),
                 hinfo_record_type=if(hinfo_record_type=1,1,0), axfr_record_type=if(axfr_record_type=1,1,0),
                 query_length=if(query_length=1,1,0), domain_shadowing=if(domain_shadowing=1,1,0),
                 behavioral_clustering=if(behavioral_clustering=1,1,0)
          | stats sum(c2_tunneling) as "C2 Tunneling", sum(beaconing) as "Beaconing", 
                 sum(burst_activity) as "Burst Activity", sum(txt_record_type) as "TXT Record Abuse",
                 sum(any_record_type) as "ANY Record Abuse", sum(hinfo_record_type) as "HINFO Record Abuse",
                 sum(axfr_record_type) as "AXFR Record Abuse", sum(query_length) as "Long Query Anomaly",
                 sum(domain_shadowing) as "Domain Shadowing", sum(behavioral_clustering) as "Behavioral Clustering" 
          | transpose | rename column as "Detection Type", "row 1" as "Count"
          | where Count > 0 | sort -Count</query>
          <earliest>-7d@h</earliest>
          <latest>now</latest>
        </search>
        <option name="charting.chart">bar</option>
        <option name="charting.drilldown">none</option>
        <option name="charting.axisTitleX.text">Count</option>
        <option name="charting.axisTitleY.text">Detection Type</option>
        <option name="charting.legend.placement">none</option>
      </chart>
    </panel>
  </row>
  <row>
    <panel>
      <title>DNS C2 Tunneling Analysis</title>
      <chart>
        <search>
          <query>`dns_volume_frequency_detection` | search src IN (| inputlookup anomalous_src_lookup | search c2_tunneling=1 | return src)
          | timechart span=1h max(count) by src</query>
          <earliest>-7d@h</earliest>
          <latest>now</latest>
        </search>
        <option name="charting.chart">line</option>
        <option name="charting.drilldown">none</option>
        <option name="charting.axisTitleX.text">Time</option>
        <option name="charting.axisTitleY.text">Query Count</option>
      </chart>
    </panel>
    <panel>
      <title>DNS Beaconing Analysis</title>
      <chart>
        <search>
          <query>`dns_data` | search src IN (| inputlookup anomalous_src_lookup | search beaconing=1 | return src)
          | `extract_sub_parent_domain` | eval parent_domain=if(isnotnull(parent_domain),parent_domain,"unknown")
          | streamstats current=f last(_time) as last_time by src, parent_domain | eval gap_seconds = last_time - _time
          | stats count by gap_seconds | sort gap_seconds</query>
          <earliest>-24h@h</earliest>
          <latest>now</latest>
        </search>
        <option name="charting.chart">column</option>
        <option name="charting.drilldown">none</option>
        <option name="charting.axisTitleX.text">Time Gap (seconds)</option>
        <option name="charting.axisTitleY.text">Count</option>
      </chart>
    </panel>
  </row>
  <row>
    <panel>
      <title>DNS Burst Activity Analysis</title>
      <chart>
        <search>
          <query>`dns_data` | search src IN (| inputlookup anomalous_src_lookup | search burst_activity=1 | return src)
          | bin _time span=1m | stats count as queries_per_minute by _time, src | timechart max(queries_per_minute) as max_queries span=1m by src</query>
          <earliest>-12h@h</earliest>
          <latest>now</latest>
        </search>
        <option name="charting.chart">line</option>
        <option name="charting.drilldown">none</option>
        <option name="charting.axisTitleX.text">Time</option>
        <option name="charting.axisTitleY.text">Queries per Minute</option>
      </chart>
    </panel>
    <panel>
      <title>TXT Record Analysis</title>
      <table>
        <search>
          <query>`dns_data` record_type=TXT | search src IN (| inputlookup anomalous_src_lookup | search txt_record_type=1 | return src)
          | `extract_txt_content` | eval entropy=entropy(txt_content), length=len(txt_content)
          | table _time, src, query, txt_content, entropy, length
          | sort -_time | head 20</query>
          <earliest>-24h@h</earliest>
          <latest>now</latest>
        </search>
      </table>
    </panel>
  </row>
  <row>
    <panel>
      <title>Query Length Analysis</title>
      <chart>
        <search>
          <query>`dns_data` | search src IN (| inputlookup anomalous_src_lookup | search query_length=1 | return src)
          | eval length=len(query) | stats count by length | sort length</query>
          <earliest>-24h@h</earliest>
          <latest>now</latest>
        </search>
        <option name="charting.chart">line</option>
        <option name="charting.drilldown">none</option>
        <option name="charting.axisTitleX.text">Query Length</option>
        <option name="charting.axisTitleY.text">Count</option>
      </chart>
    </panel>
    <panel>
      <title>Domain Shadowing Analysis</title>
      <table>
        <search>
          <query>`dns_data` | search src IN (| inputlookup anomalous_src_lookup | search domain_shadowing=1 | return src)
          | `extract_sub_parent_domain` | stats dc(subdomain) as unique_subdomains by src, parent_domain
          | sort -unique_subdomains | rename parent_domain as "Parent Domain", unique_subdomains as "Unique Subdomains", src as "Source IP"</query>
          <earliest>-24h@h</earliest>
          <latest>now</latest>
        </search>
      </table>
    </panel>
  </row>
  <row>
    <panel>
      <title>Behavioral Clustering Analysis</title>
      <chart>
        <search>
          <query>`dns_behavioral_clustering_detection` | eval cluster_name = "Anomalous Cluster" 
          | append [| `dns_data` | eval query_length = len(query)
          | rex field=query "^(?<subdomain>.*?)\.(?<parent_domain>[^.]+\.[^.]+)$" | streamstats current=f last(_time) as last_time by src, parent_domain | eval gap = last_time - _time | eventstats stdev(gap) as stdev_gap by src, parent_domain
          | eventstats dc(subdomain) as distinct_subdomains count(eval(record_type="TXT")) as txt_queries count(eval(reply_code="NXDOMAIN")) as nx_queries avg(query_length) as avg_query_len, stdev(query_length) as stdev_query_len max(query_length) as max_query_len by src
          | bin _time span=1h
          | eventstats count as hourly_query_count by _time, src
          | stats avg(hourly_query_count) as avg_query_freq_hourly,
                  avg(distinct_subdomains) as avg_distinct_subdomains,
                  latest(avg_query_len) as avg_len,
                  latest(stdev_query_len) as stdev_len,
                  latest(max_query_len) as max_len,
                  sum(hourly_query_count) as total_q,
                  latest(txt_queries) as txt_q,
                  latest(nx_queries) as nx_q,
                  min(stdev_gap) as beacon_stdev
                  by src
          | eval txt_ratio = round(coalesce(txt_q,0) / total_q, 4), nx_ratio = round(coalesce(nx_q,0) / total_q, 4)
          | fillnull value=0 query_freq_hourly, avg_len, stdev_len, max_len, txt_ratio, nx_ratio, beacon_stdev
          | fields src, avg_query_freq_hourly, avg_distinct_subdomains, avg_len, stdev_len, max_len, txt_ratio, nx_ratio, beacon_stdev
          | where src!="" | eval cluster_name = "Normal Traffic" | head 50]
          | fit KMeans avg_query_freq_hourly avg_distinct_subdomains beacon_stdev max_len txt_ratio k=2
          | fields src, cluster, cluster_name, avg_query_freq_hourly, avg_distinct_subdomains, beacon_stdev, max_len, txt_ratio
          | stats count by cluster_name</query>
          <earliest>-24h@h</earliest>
          <latest>now</latest>
        </search>
        <option name="charting.chart">pie</option>
        <option name="charting.drilldown">none</option>
      </chart>
    </panel>
    <panel>
      <title>Anomaly Score Timeline</title>
      <chart>
        <search>
          <query>| inputlookup anomalous_src_lookup | search last_update > relative_time(now(), "-7d")
          | eval score=c2_tunneling + beaconing + burst_activity + txt_record_type + any_record_type + hinfo_record_type + axfr_record_type + query_length + domain_shadowing + behavioral_clustering
          | convert timeformat="%Y-%m-%d" ctime(last_update) as day
          | stats max(score) as max_score by day, src
          | timechart max(max_score) as "Maximum Anomaly Score" by day</query>
          <earliest>-7d@h</earliest>
          <latest>now</latest>
        </search>
        <option name="charting.chart">line</option>
        <option name="charting.drilldown">none</option>
        <option name="charting.axisTitleX.text">Time</option>
        <option name="charting.axisTitleY.text">Anomaly Score</option>
      </chart>
    </panel>
  </row>
</dashboard> 